name: Build & Deploy Multi-Platform

on:
  push:
    branches: [main, multi-platform-transformation]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # Build and deploy to Cloudflare Pages
  deploy-web:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false
        
      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗 Build project
        run: npm run build:web
        
      - name: 🚀 Deploy to Cloudflare Pages
        if: secrets.CLOUDFLARE_API_TOKEN && secrets.CLOUDFLARE_ACCOUNT_ID
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: dyad-app
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ⚠️ Cloudflare Pages Deployment Skipped
        if: secrets.CLOUDFLARE_API_TOKEN == '' || secrets.CLOUDFLARE_ACCOUNT_ID == ''
        run: |
          echo "Cloudflare Pages deployment skipped due to missing secrets:"
          echo "- CLOUDFLARE_API_TOKEN: MISSING"
          echo "- CLOUDFLARE_ACCOUNT_ID: MISSING"
          echo ""
          echo "To enable deployment, add these secrets in:"
          echo "Repository Settings → Secrets and variables → Actions"

  # Build Android APK
  build-android:
    runs-on: ubuntu-latest
    needs: deploy-web
    if: hashFiles('mobile/**') != ''
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false
        
      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            mobile/package-lock.json

      - name: 🧩 Install Deps
        working-directory: mobile
        run: npm ci

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🛂 Make Gradle Executable
        working-directory: mobile/android
        run: chmod +x gradlew

      # اختياري: توليد keystore مؤقت إذا لم يتم وضع Secrets (لتجنّب فشل البناء)
      - name: 🔐 Prepare Keystore
        if: secrets.ANDROID_KEYSTORE_BASE64 == ''
        working-directory: mobile/android/app
        run: |
          keytool -genkeypair -v -storetype JKS -keystore temp-release-key.jks -alias dyad -keyalg RSA -keysize 2048 -validity 10000 -storepass password -keypass password -dname "CN=CI,O=Dyad,C=US"
          echo "ANDROID_KEYSTORE_FILE=$PWD/temp-release-key.jks" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=password" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS=dyad" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS_PASSWORD=password" >> $GITHUB_ENV

      # في حالة وجود Secrets، نفك ترميز keystore ونمرر كلمات السر
      - name: 🔐 Decode Keystore from Secrets
        if: secrets.ANDROID_KEYSTORE_BASE64
        working-directory: mobile/android/app
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > release-key.jks
          echo "ANDROID_KEYSTORE_FILE=$PWD/release-key.jks" >> $GITHUB_ENV
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: 🔑 Export Signing Vars
        run: |
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_BASE64 != '' && secrets.ANDROID_KEYSTORE_PASSWORD || 'password' }}" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS=${{ secrets.ANDROID_KEYSTORE_BASE64 != '' && secrets.ANDROID_KEYSTORE_PASSWORD != '' && secrets.ANDROID_KEY_ALIAS || 'dyad' }}" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS_PASSWORD=${{ secrets.ANDROID_KEYSTORE_BASE64 != '' && secrets.ANDROID_KEYSTORE_PASSWORD != '' && secrets.ANDROID_KEY_ALIAS_PASSWORD || 'password' }}" >> $GITHUB_ENV

      - name: 🏗️ Build Release APK
        working-directory: mobile/android
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: ./gradlew :app:assembleRelease --no-daemon

      - name: 📦 Upload Artifact (APK)
        uses: actions/upload-artifact@v4
        with:
          name: Dyad-Android-APK
          path: mobile/android/app/build/outputs/apk/release/app-release.apk

  # Skip Android build if mobile directory doesn't exist
  skip-android:
    runs-on: ubuntu-latest
    needs: deploy-web
    if: hashFiles('mobile/**') == ''
    steps:
      - name: ⚠️ Android Build Skipped
        run: |
          echo "Android build skipped - mobile directory not found"
          echo "This is normal if you haven't set up the mobile app yet"

  # Test and validate
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🧪 Run tests
        run: npm test
        
      - name: 🔍 Lint check
        run: npm run lint:fix